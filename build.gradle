buildscript {
    ext.kotlin_version = '1.8.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id "com.jfrog.bintray" version "1.7.3"
}


apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}



group 'nl.jworks.markdown_to_asciidoc'
version '2.0.0-SNAPSHOT'

sourceCompatibility = targetCompatibility = 17
defaultTasks 'check'

repositories {
  jcenter()


  if (project.hasProperty('useMavenLocal') && project.useMavenLocal.toBoolean()) {
    mavenLocal()
  }
  mavenCentral()
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

javadoc {
  options.encoding = 'UTF-8'
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')

  publications = ['mavenJava'] //When uploading Maven-based publication files
  dryRun = false //Whether to run this as dry-run, without deploying
  publish = true //If version should be auto published after an upload
  pkg {
    repo = 'maven'
    name = 'markdown_to_asciidoc'
    desc = 'An easy Markdown to Asciidoc converter'
    websiteUrl = 'https://github.com/bodiam/markdown-to-asciidoc'
    issueTrackerUrl = 'https://github.com/bodiam/markdown-to-asciidoc/issues'
    vcsUrl = 'https://github.com/bodiam/markdown-to-asciidoc'
    licenses = ['Apache-2.0']
    labels = ['markdown', 'asciidoc', 'java']
    publicDownloadNumbers = true
    //Optional version descriptor
    version {
      name = project.version //Bintray logical version name
      desc = 'Test version'
      mavenCentralSync {
        sync = false //Optional (true by default). Determines whether to sync the version to Maven Central.
        user = 'userToken' //OSS user token
        password = 'paasword' //OSS user password
        close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
      }
    }
  }

}

dependencies {

  implementation 'org.pegdown:pegdown:1.6.0'
  //We want to use latest parboiled version not the default one provided by pegdown
  implementation 'org.parboiled:parboiled-java:1.4.1'
  implementation 'org.jsoup:jsoup:1.16.1'
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  testImplementation 'org.apache.commons:commons-io:1.3.2'
  testImplementation 'io.cucumber:cucumber-picocontainer:7.11.0'
  testImplementation 'io.cucumber:cucumber-junit:7.11.0'
  testImplementation 'io.cucumber:cucumber-java:7.11.0'
}

java {
  withSourcesJar()
  withJavadocJar()
}

artifacts {
  archives sourcesJar, javadocJar, distZip
}

startScripts {
  applicationName = rootProject.name
  mainClassName = 'nl.jworks.markdown_to_asciidoc.Converter'
}

eclipse {
  classpath {
    defaultOutputDir = file('build/eclipse')
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact sourcesJar
      artifact javadocJar
    }
  }
}